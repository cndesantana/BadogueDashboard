xlab("") +
geom_text( aes (x = reorder(names(words_td),as.numeric(words_td)), y = words_td, label = words_td ) , vjust = 0, hjust = 0, size = 2 ) +
coord_flip()
png("Trechos_Estradas.png",width=3200,height=1800,res=300)
print(p)
dev.off()
print(p)
file$Cidade <- toupper(file$Cidade)
file %>% filter(!is.na(Cidade)) %>% select(Cidade)
file %<>% filter(!is.na(Cidade)) %>% select(Cidade)
file$Cidade
file
file %>% separate(Cidade)
file <- read_xlsx(files[1])
file$Cidade <- toupper(file$Cidade)
file %>% filter(!is.na(Cidade)) %>% select(Cidade)
file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% arrange()
test
test %>% separate_rows()
test %>% separate_rows
test %>% select(times) %>% separate_rows
test %>% select(times) %>% separate_rows()
test %>% select(times) %>% group_by(times) %>% separate_rows()
test %>% transform(times2 = strsplit(times, ", "))
test %>% transform(times2 = strsplit(times, ","))
test %>% transform(times2 = strsplit(as.character(times), ","))
test %>% group_by(times)
test %>% group_by(times) %>% nest()
test %>% separate()
test %>% separate_rows()
test %>% select(times) %>% separate_rows()
test %>% select(times) %>% separate_rows(sep = ",")
test %>% select(times) %>% separate_rows(sep = " ")
test %>% select(times) %>% separate_rows(sep = "\n")
test %>% select(times) %>% separate_rows(sep = ",")
test %>% select(times) %>% separate_rows(sep = ",",times=3)
test %>% select(times) %>% separate_rows(sep = ",")
test %>%
mutate(times = strsplit(as.character(times), ",")) %>%
unnest(times)
file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ",")) %>% unnest(Cidade)
file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ",")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count) %>% tail(50)
file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ",")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
a <- list(1,2,3,3)
a
as.numeric(a)
rm(a)
file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ",")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
cidades <- file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ",")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
cat(cidades$Cidade,sep="\n",file="./bla.txt",append=TRUE)
file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ",")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ", ")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
cidades <- file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ", ")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
length(cidades)
length(cidades[1])
length(cidades[1,])
length(cidades[,1])
cidades <- file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ", ")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
cidades
cat(cidades$Cidade, sep="\n",append=TRUE,file="bla.txt")
file <- read_xlsx(files[1])
x <- toupper(file$Conteúdo)
pattern <- "\\bTRECHO ENTRE\\b[^\\.]*$|\\bTRECHO DE\\b[^\\.]*$|\\bTRECHO QUE LIGA\\b[^\\.]*$|\\bESTRADA QUE LIGA\\b[^\\.]*$|\\bESTRADA ENTRE\\b[^\\.]*$|\\bESTRADA DE\\b[^\\.]*$"
m <- regexpr(pattern, x)
trecho <- regmatches(x, m)
text <- unlist(str_split(trecho,boundary("word")))
text <- gsub(" *\\b[[:alpha:]]{1,2}\\b *", " ", text)
gsub("^ +| +$|( ) +", "\\1", text)
myCorpus <- corpus(text)
mydfm <- dfm(myCorpus, remove = toupper(c(badwords,"estrada","liga","povo","quando","ano","novo","sofrendo","essa","região","falta","muito","estado","entre","vamos","via","ajuda","favor","agora","vem","tudo","eleição","deles", "hoje","falando","começar","voto","242")))
words_td <- topfeatures(mydfm, 50)
names(words_td) <- toupper(names(words_td))
p <- ggplot() +
geom_bar(stat = "identity",
aes(x = reorder(names(words_td),as.numeric(words_td)), y = as.numeric(words_td))) +
ylab("Número de Citações") +
xlab("") +
geom_text( aes (x = reorder(names(words_td),as.numeric(words_td)), y = words_td, label = words_td ) , vjust = 0, hjust = 0, size = 2 ) +
coord_flip()
png("Trechos_Estradas.png",width=3200,height=1800,res=300)
print(p)
dev.off()
file <- read_xlsx(files[1])
file$Cidade <- toupper(file$Cidade)
cidades <- file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ", ")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
cidades
cidades
p <- cidades %>% arrange(count)  %>% tail(45) %>%
ggplot() +
geom_bar(stat = "identity",
aes(x = reorder(Cidade,as.numeric(count)), y = as.numeric(count))) +
ylab("Número de Citações") +
xlab("") +
geom_text( aes (x = reorder(Cidade,as.numeric(count)), y = as.numeric(count), label = as.numeric(count) ) , vjust = 0, hjust = 0, size = 2 ) +
coord_flip()
print(p)
png("CidadesCitadas_Estradas.png",width=3200,height=1800,res=300)
print(p)
dev.off()
library(ggmap)
mapfolder <- "/home/cdesantana/DataSCOUT/geodata"
wd <- "/home/cdesantana/DataSCOUT/Objectiva/Estradas"
setwd(wd)
municBR   <- readShapePoly(fn=paste(mapfolder,"/municipios_2010.shp",sep=""))
municBA <- municBR[(municBR@data$estado_id)==5,] #Bahia
cidades
location <- sapply(as.character(cidades$Cidade),geocode)
cidades %>% filter(!is.na(location[1,]))
cidades %<>% filter(!is.na(location[1,]))
cidades <- cidades %>% filter(!is.na(location[1,]))
goodlocation <- location[,!is.na(location[1,])]
longitudes <- as.numeric(goodlocation[1,])
latitudes <- as.numeric(goodlocation[2,])
sizes <- as.numeric(cidades$count)
sizes
sizes <- log(as.numeric(cidades$count))
sizes
sizes <- log(as.numeric(cidades$count)) + 1
sizes
dflatlon <- data.frame(longitudes = longitudes, latitudes = latitudes, sizes = sizes)
bahia_center = as.numeric(geocode("Bahia"))
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=2, zoom=6), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=sizes)
print(p)
print(p)
dflatlon <- dflatlon %>% filter(latitudes > -20 & latitudes < -5 & longitudes > -50 & longitudes< -37)
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=sizes)
print(p)
dflatlon
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=sizes)
print(p)
BahiaMap
BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
dflatlon
which(longitudes < -42 & latitudes < -15)
which(dflatlon$longitudes < -42 & dflatlon$latitudes < -15)
dflatlon <- dflatlon[-c(17,75,110)]
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
print(p)
which(dflatlon$latitudes < -18)
dflatlon <- dflatlon[-c(17,75,110),]
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
print(p)
sort(dflatlon$latitudes)
which(dflatlon$latitudes > -8)
dflatlon <- dflatlon[-c(5,44),]
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
print(p)
which(dflatlon$latitudes > -10)
dflatlon$longitudes[which(dflatlon$latitudes > -10)]
dflatlon[c(43,82,126,135),]
dflatlon[c(126,135),]
dflatlon <- dflatlon[-c(126,135),]
bahia_center = as.numeric(geocode("Bahia"))
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=2, zoom=6), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
print(p)
print(p)
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=3 zoom=6), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=3, zoom=6), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
print(p)
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=1, zoom=6), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
print(p)
dflatlon <- data.frame(longitudes = longitudes, latitudes = latitudes, sizes = sizes)
dflatlon <- dflatlon %>% filter(latitudes > -20 & latitudes < -5 & longitudes > -50 & longitudes< -37)
dflatlon <- dflatlon[-c(17,75,110),]
dflatlon <- dflatlon[-c(5,44),]
bahia_center = as.numeric(geocode("Bahia"))
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=1, zoom=6), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
print(p)
dflatlon <- dflatlon[-c(43,82),]
bahia_center = as.numeric(geocode("Bahia"))
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=1, zoom=6), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=1)
print(p)
range(dflatlon$sizes)
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=4)
print(p)
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=as.numeric(dflatlon$sizes))
print(p)
png("mapaBahia.png",width=3200,height=1800,res=300)
print(p)
dev.off()
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=1, zoom=7), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=as.numeric(dflatlon$sizes))
print(p)
BahiaMap = ggmap(get_googlemap(center=bahia_center, scale=1, zoom=6), extent="normal")
p <- BahiaMap + geom_point(aes(x=longitudes, y=latitudes), data = dflatlon, col="red", alpha=0.4, size=as.numeric(dflatlon$sizes))
print(p)
png("mapaBahia.png",width=3200,height=1800,res=300)
print(p)
dev.off()
notas <- list()
aprovados <- 0
reprovados <- 0
mediaAp <- 0
notas <- list()
for (i in 1:10){
nota_ <- readline(prompt="Insira um valor"));
notas <- c(notas,nota_);
if(as.numeric(notas[i]) < 6){
aprovados <- aprovados + 1;
}else{
reprovados <- reprovados + 1;
}
}
print(paste("Aprovados: ", aprovados));
print(paste("Reprovados: ", reprovados));
MediaAp <- (aprovados*100)/10;
print(paste("Media aprovados: ", mediaAp,"%",sep=""));
notas <- list()
aprovados <- 0
reprovados <- 0
mediaAp <- 0
notas <- list()
for (i in 1:10){
nota_ <- readline(prompt="Insira um valor");
notas <- c(notas,nota_);
if(as.numeric(notas[i]) < 6){
aprovados <- aprovados + 1;
}else{
reprovados <- reprovados + 1;
}
}
notas
notas <- list()
aprovados <- 0
reprovados <- 0
mediaAp <- 0
notas <- list()
for (i in 1:10){
nota_ <- readline(prompt="Insira um valor");
if(as.numeric(notas_) < 6){
aprovados <- aprovados + 1;
}else{
reprovados <- reprovados + 1;
}
}
notas <- list()
aprovados <- 0
reprovados <- 0
mediaAp <- 0
notas <- list()
for (i in 1:10){
nota_ <- readline(prompt="Insira um valor");
notas <- c(notas,nota_);
if(as.numeric(notas) < 6){
aprovados <- aprovados + 1;
}else{
reprovados <- reprovados + 1;
}
}
print(paste("Reprovados: ", reprovados));
MediaAp <- (aprovados*100)/10;
print(paste("Media aprovados: ", mediaAp,"%",sep=""));
notas <- list()
aprovados <- 0
reprovados <- 0
mediaAp <- 0
notas <- list()
for (i in 1:10){
nota_ <- readline(prompt="Insira um valor");
notas <- c(notas,nota_);
}
notas
notas <- unlist(notas)
notas
for(i in 1:10){
if(as.numeric(notas[i]) < 6){
aprovados <- aprovados + 1;
}else{
reprovados <- reprovados + 1;
}
}
cidades <- read.csv("./cidades.txt",header=FALSE)
location
is.na(location)
!is.na(location)
location[,is.na(location)]
location[is.na(location),]
locatioin
location
location[is.na(location)]
location[is.na(location),]
location[which(is.na(location))]
location[,which(is.na(location))]
location[which(is.na(location)),]
location
write.csv(location,sep=";",file="locations.txt",append=TRUE)
write.csv(location,file="locations.txt",append=TRUE)
write.csv(location,file="locations.txt")
dflatlon
cidades <- read.csv("./cidades.txt",header=FALSE)
cidades
cidades <- file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ", ")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
cidades
cidades <- file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ", ")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count) %>%tail(10
)
cidades <- file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ", ")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count) %>%tail(10)
cidades
cidades <- file %>% filter(!is.na(Cidade)) %>% select(Cidade) %>% mutate(Cidade = strsplit(as.character(Cidade), ", ")) %>% unnest(Cidade) %>% group_by(Cidade) %>% summarise(count = n()) %>% arrange(count)
cidades
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(flexdashboard)
library(flexdashboard)
library(flexdashboard)
shiny::runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/BadogueExcel')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
pkgData()
file
file$Conteúdo
file %>% select(Conteúdo) %>% mutate(Conteúdo = strsplit(as.character(Conteúdo), " ")) %>% unnest(Conteúdo)
palavras <- file %>% select(Conteúdo) %>% mutate(Conteúdo = strsplit(as.character(Conteúdo), " ")) %>% unnest(Conteúdo)
palavras %>% group_by(Conteúdo) %>% tally()
palavras %>% group_by(Conteúdo) %>% tally() %>% arrange(desc(n), toupper(Conteúdo))
palavras %>% group_by(Conteúdo) %>% tally() %>% arrange(desc(n), toupper(Conteúdo)) %>% filter(letters %in% Conteúdo)
palavras %>% group_by(Conteúdo) %>% tally() %>% arrange(desc(n), toupper(Conteúdo))
palavras %>% group_by(Conteúdo) %>% tally() %>% arrange(desc(n), toupper(Conteúdo)) %>% remove(badwords)
badwords
palavras %>% group_by(Conteúdo) %>% tally() %>% arrange(desc(n), toupper(Conteúdo)) %>% remove(.,badwords)
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
runApp('~/DataSCOUT/Objectiva/PapoCorreria/dashboard')
getwd()
setwd("~/DataSCOUT/Objectiva/PapoCorreria/dashboard")
setwd("/home/cdesantana/DataSCOUT/Objectiva/PapoCorreria/dashboard")
runApp()
workdir <- "/home/cdesantana/DataSCOUT/Objectiva/PapoCorreria/dashboard"
runApp()
load("/home/cdesantana/DataSCOUT/Objectiva/PapoCorreria/dashboard/fb_oauth")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$urlpost
url
url <- "https://www.facebook.com/ruicostaoficial/photos/a.343034462495371.1073741828.342905935841557/1158675754264567/?type=3"
data <- "2017/10/04"
id_pagina <- getFBID(url)
id_pagina
data <- input$date
data
load("/home/cdesantana/DataSCOUT/Objectiva/PapoCorreria/dashboard/fb_oauth")
data_inicio <- ymd(as.character(data)) + days(-2);
data_final <- ymd(as.character(data)) + days(2);
mypage <- getPage(id_pagina, token = fb_oauth, feed=TRUE, since= as.character(data_inicio), until=as.character(data_final))
id_post <- mypage$id[which(as.character(mypage$link)%in%url)]
id_post
post_dados <- getPost(id_post, token=fb_oauth, n= 10000)
text <- post_dados$comments$message
textdata <- post_dados$comments
textdata
post <- textdata
timeseries <- post$comments %>% mutate(
day = ymd_hms(created_time) %>%
as.Date() %>%
format("%d"),
month = ymd_hms(created_time) %>%
as.Date() %>%
format("%m"),
year = ymd_hms(created_time) %>%
as.Date() %>%
format("%Y"),
hour = ymd_hms(created_time) %>%
format("%H"),
min = ymd_hms(created_time) %>%
format("%M")
) %>%
group_by(hour,min) %>%
summarise(total = n())
post$comments %>% mutate(
day = ymd_hms(created_time) %>%
as.Date() %>%
format("%d"),
month = ymd_hms(created_time) %>%
as.Date() %>%
format("%m"),
year = ymd_hms(created_time) %>%
as.Date() %>%
format("%Y"),
hour = ymd_hms(created_time) %>%
format("%H"),
min = ymd_hms(created_time) %>%
format("%M")
)
post_dados$comments %>% mutate(
day = ymd_hms(created_time) %>%
as.Date() %>%
format("%d"),
month = ymd_hms(created_time) %>%
as.Date() %>%
format("%m"),
year = ymd_hms(created_time) %>%
as.Date() %>%
format("%Y"),
hour = ymd_hms(created_time) %>%
format("%H"),
min = ymd_hms(created_time) %>%
format("%M")
) %>%
group_by(hour,min) %>%
summarise(total = n())
post_dados$comments %>% mutate(
day = ymd_hms(created_time) %>%
as.Date() %>%
format("%d"),
month = ymd_hms(created_time) %>%
as.Date() %>%
format("%m"),
year = ymd_hms(created_time) %>%
as.Date() %>%
format("%Y"),
hour = ymd_hms(created_time) %>%
format("%H"),
min = ymd_hms(created_time) %>%
format("%M")
) %>%
group_by(hour,min) %>%
summarise(total = n())
timeseries$hour <- as.numeric(timeseries$hour) - 3
timeseries$hour <- as.character(timeseries$hour)
timeseries
as.Date(timeseries$hour)
paste(timeseries$hour,timeseries$min,sep=":")
as.Date(paste(timeseries$hour,timeseries$min,sep=":"))
as.Date(paste(timeseries$hour,timeseries$min,sep=":"),"%H:%M")
as.Date(paste(timeseries$hour,timeseries$min,sep=":"),"%h:%M")
as.Date(paste(timeseries$hour,timeseries$min,sep=":"),"%H:%M")
strptime(paste(timeseries$hour,timeseries$min,sep=":"),"%H:%M")
paste(timeseries$hour,timeseries$min,sep=":")
myx <- strptime(paste(timeseries$hour,timeseries$min,sep=":"),"%H:%M")
myx
myy <- timeseries$total
myx <- strptime(paste(timeseries$hour,timeseries$min,sep=":"),"%H:%M")
myy <- timeseries$total
ggplot() + geom_line(stat = "identity", aes(x = myx, y = myy)) + ylab("Audiência") + xlab("Tempo")
runApp()
runApp()
runApp()
runApp()
timeseries
myx
?strptime
dates <- paste(timeseries$day,timeseries$month,timeseries$year,paste="/");
timeseries <- post_dados$comments %>% mutate(
day = ymd_hms(created_time) %>%
as.Date() %>%
format("%d"),
month = ymd_hms(created_time) %>%
as.Date() %>%
format("%m"),
year = ymd_hms(created_time) %>%
as.Date() %>%
format("%Y"),
hour = ymd_hms(created_time) %>%
format("%H"),
min = ymd_hms(created_time) %>%
format("%M")
) %>%
group_by(year,month,day,hour,min) %>%
summarise(total = n())
dates <- paste(timeseries$day,timeseries$month,timeseries$year,paste="/");
dates
dates <- paste(timeseries$day,timeseries$month,timeseries$year,sep="/");
dates
times <- paste(timeseries$hour,timeseries$min,sep=":");
times
myx <- paste(dates, times)
mydate <- strptime(myx, "%m/%d/%y %H:%M:%S")
ggplot() + geom_line(stat = "identity", aes(x = mydate, y = myy)) + ylab("Audiência") + xlab("Tempo")
mydate
mydate <- strptime(myx, "%m/%d/%y %H:%M")
mydate
dates
mydate <- strptime(myx, "%d/%m/%y %H:%M")
mydate
myx
mydate
myx <- paste(dates, times)
mydate
myx
mydate <- strptime(myx, "%d/%m/%Y %H:%M")
mydate
ggplot() + geom_line(stat = "identity", aes(x = mydate, y = myy)) + ylab("Audiência") + xlab("Tempo")
mydate
myy <- timeseries$total
myy
length(myy)
ggplot() + geom_line(stat = "identity", aes(x = mydate, y = myy)) + ylab("Audiência") + xlab("Tempo")
runApp()
runApp()
